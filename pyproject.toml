[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "obs-agent"
version = "2.0.0"
description = "AI-powered OBS Studio automation and control system"
readme = "README.md"
authors = [
    {name = "OBS Agent Contributors", email = "obs-agent@example.com"}
]
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
dependencies = [
    "obs-websocket-py>=1.0",
    "python-dotenv>=0.19.0",
    "asyncio",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.4.0",
    "sphinx>=7.1.0",
]
crew = [
    "crewai>=0.1.0",
    "langchain>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/haasonsaas/obs-agent"
Documentation = "https://obs-agent.readthedocs.io/"
Repository = "https://github.com/haasonsaas/obs-agent"
Issues = "https://github.com/haasonsaas/obs-agent/issues"

[project.scripts]
obs-agent = "obs_agent.cli:main"
obs-setup = "obs_agent.scripts.setup:main"
obs-stream = "obs_agent.scripts.stream:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
obs_agent = ["py.typed"]

[tool.black]
line-length = 120
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/obs_agent"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]