{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(pip install:*)",
      "Bash(python3:*)",
      "Bash(source:*)",
      "Bash(python test_connection.py:*)",
      "Bash(lsof:*)",
      "Bash(python test:*)",
      "Bash(python:*)",
      "Bash(mkdir:*)",
      "Bash(# Move core OBS agent files to src/obs_agent\nmv obs_agent.py src/obs_agent/\nmv advanced_features.py src/obs_agent/\n\n# Move CrewAI files to src/crew\nmv obs_crew_agents.py src/crew/\nmv obs_crew_tools.py src/crew/\nmv obs_crew_examples.py src/crew/\n\n# Move AI agent to src/tools\nmv obs_ai_agent.py src/tools/\n\n# Move examples to examples directory\nmv examples.py examples/\nmv automation_scripts.py examples/\nmv awesome_demo.py examples/demos/\nmv demo.py examples/demos/\nmv run_demo.py examples/demos/\n\n# Move tests to tests directory\nmv test_connection.py tests/\nmv test_interactive.py tests/\nmv test_now.py tests/\nmv simple_test.py tests/\n\n# Move documentation\nmv OBS_SETUP_GUIDE.md docs/\nmv README_CREW.md docs/\n\n# Clean up root by removing old README\nrm README.md)",
      "Bash(rm:*)",
      "Bash(gh repo create:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_multiple_files",
      "Bash(ls:*)",
      "WebFetch(domain:github.com)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(flake8:*)",
      "Bash(git restore:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(autoflake:*)",
      "mcp__filesystem__read_file",
      "Bash(mypy:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python3 -m pytest tests/unit/test_config.py::test_load_default -xvs)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_config.py::test_load_default -xvs)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_config.py --collect-only)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_config.py::TestConfig::test_load_default -xvs)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_exceptions.py::TestHandleOBSError::test_handle_websocket_errors -xvs)",
      "Bash(mv:*)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/ -q)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_event_sourcing.py -xvs)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python3 -m pytest tests/unit/test_event_sourcing.py -xvs)",
      "Bash(pip3 install:*)",
      "Bash(sed:*)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_event_sourcing.py::TestDomainEvents -xvs)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_event_sourcing.py::TestDomainEvents::test_scene_created_event -xvs)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python3:*)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_event_sourcing.py -x --tb=short)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_event_sourcing.py::TestTimeTravelDebugger::test_start_debug_session -xvs)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_event_sourcing.py --tb=short -q)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/ -q)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m pytest tests/unit/test_event_sourcing.py::TestTimeTravelDebugger::test_what_if_scenario -xvs)",
      "Bash(gh run watch:*)",
      "mcp__filesystem__create_directory",
      "Bash(chmod:*)",
      "Bash(PYTHONPATH=/Users/jonathanhaas/obs_agent/src python -m mypy src/obs_agent/types/__init__.py --no-error-summary)",
      "Bash(true)",
      "mcp__filesystem__list_allowed_directories"
    ],
    "deny": []
  }
}